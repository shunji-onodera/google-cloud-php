{"id":"core\/testing\/reflection\/descriptionfactory","type":"","title":"Google\\Cloud\\Core\\Testing\\Reflection\\DescriptionFactory","name":"DescriptionFactory","description":"<p>Creates a new Description object given a body of text.<\/p>\n<p>Descriptions in phpDocumentor are somewhat complex entities as they can contain one or more tags inside their\nbody that can be replaced with a readable output. The replacing is done by passing a Formatter object to the\nDescription object's <code>render<\/code> method.<\/p>\n<p>In addition to the above does a Description support two types of escape sequences:<\/p>\n<ol>\n<li><code>@<\/code> to escape the <code>@<\/code> character to prevent it from being interpreted as part of a tag, i.e. ``<\/li>\n<li><code>{}<\/code> to escape the <code>}<\/code> character, this can be used if you want to use the <code>}<\/code> character in the description\nof an inline tag.<\/li>\n<\/ol>\n<p>If a body consists of multiple lines then this factory will also remove any superfluous whitespace at the beginning\nof each line while maintaining any indentation that is used. This will prevent formatting parsers from tripping\nover unexpected spaces as can be observed with tag descriptions.<\/p>\n<p>Extends \\phpDocumentor\\Reflection\\DocBlock\\DescriptionFactory<\/p>","examples":[],"resources":[],"methods":[{"id":"__construct","type":"constructor","name":"__construct","source":"Core\/src\/Testing\/Reflection\/DescriptionFactory.php#L72","description":"<p>Initializes this factory with the means to construct (inline) tags.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]},{"id":"create","type":"instance","name":"create","source":"Core\/src\/Testing\/Reflection\/DescriptionFactory.php#L85","description":"<p>Returns the parsed text of this description.<\/p>","examples":[],"resources":[],"params":[],"exceptions":[],"returns":[]}]}